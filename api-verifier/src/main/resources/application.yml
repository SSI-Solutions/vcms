server:
  port: ${SERVER_PORT:8081}

logging:
  level:
    root: ${LOG_LEVEL:INFO}

aries.facade.basePath: ${ARIES_FACADE_BASEPATH:http://localhost:8000}

spring:
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBITMQ_DEFAULT_USER:guest}
    password: ${RABBITMQ_DEFAULT_PASS:guest}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 2s
          max-attempts: 3
  datasource:
    url: jdbc:postgresql://${DATABASE_URL:127.0.0.1:5432}/${DATABASE_NAME:postgres}?currentSchema=${DATABASE_SCHEMA}${DATABASE_ADDITIONAL_ARGS:}
    username: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASS:postgres}
  flyway:
    url: jdbc:postgresql://${DATABASE_URL:127.0.0.1:5432}/${DATABASE_NAME:postgres}${FLYWWAY_ADDITIONAL_ARGS:}
    schemas: ${DATABASE_SCHEMA:verifier}
    defaultSchema: ${DATABASE_SCHEMA:verifier}
    createSchemas: true
    user: ${FLYWAY_USER:postgres}
    password: ${FLYWAY_PASSWORD:postgres}
    locations: classpath:com/adnovum/vcms/verifier/datamodel/ddl/migration
    baselineOnMigrate: false
    validateOnMigrate: true
    table: schema_version
    sql-migration-prefix: v
    placeholders:
      username: ${spring.datasource.username}
    encoding: UTF-8

vcms.rabbitmq.queues.proof: ${RABBIT_MQ_QUEUE_PROOF:verifierPresentationQueue}

# Note: this is usually overriden from the environment
ssi.configuration.creDefIds:
      - 'Xd6TV52RudCxrFBSJzDn67:3:CL:25:ePersoTest3'

# Based on bug https://stackoverflow.com/questions/72235752/cannot-invoke-org-springframework-web-servlet-mvc-condition-patternsrequestcond
spring.mvc.pathmatch.matching-strategy: ant_path_matcher

vcms:
  cors:
    allowCredentials: ${VCMS_CORS_ALLOW_CREDENTIALS:true}
    allowedOriginPatterns: ${VCMS_CORS_ALLOWED_ORIGIN_PATTERNS:*}
    allowedHeaders: ${VCMS_CORS_ALLOWED_HEADERS:*}
    allowedMethods: ${VCMS_CORS_ALLOWED_METHODS:*}
    mappingPattern: ${VCMS_CORS_MAPPING_PATTERN:/**}

management.server.port: 9000
