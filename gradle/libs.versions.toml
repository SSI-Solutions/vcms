[versions]
bmuschko-docker = "9.1.0"
grgit = "5.0.0"
flyway = "9.4.0"
jpa-schema-gen = "1.1.20200614081240"
node-gradle = "3.5.1"
lombok = "1.18.24"
okhttp = "4.9.3"
openapi-generator = "5.3.0"
openapi-jackson-nullable = "0.2.4"
postgres = "42.4.3"
sonarqube = "3.5.0.2730"
spotbugs = "4.7.3"
spring-boot = "2.7.7"
spring-security = "5.7.6"
springfox = "3.0.0"
# Aca-PY is avaialble as a Swagger 2 spec, so we need swagger-annotations 1.x
swagger-annotations = "1.6.9"
swagger-annotations-openapi = "2.2.8"
unbrokendom = "4.0.0"
owasp-dependencycheck = "7.4.4"
modelmapper = "3.1.1"
commons-lang3 = "3.12.0"
testcontainers = "1.17.6"
swagger-ui = "1.6.14"
datafaker = "1.7.0"

[libraries]
swagger-ui = { module="org.springdoc:springdoc-openapi-ui", version.ref="swagger-ui" }
flyway = { module="org.flywaydb:flyway-core", version.ref="flyway" }
lombok = { module="org.projectlombok:lombok", version.ref="lombok" }
okhttp = { module="com.squareup.okhttp3:okhttp", version.ref="okhttp" }
okhttp-mockserver = { module="com.squareup.okhttp3:mockwebserver", version.ref="okhttp" }
openapi-jackson-nullable = { module="org.openapitools:jackson-databind-nullable", version.ref="openapi-jackson-nullable" }
postgres = { module="org.postgresql:postgresql", version.ref="postgres" }
spotbugs = { module="com.github.spotbugs:spotbugs", version.ref="spotbugs" }
spring-boot-amqp = { module="org.springframework.boot:spring-boot-starter-amqp", version.ref="spring-boot" }
spring-boot-actuator = { module="org.springframework.boot:spring-boot-starter-actuator", version.ref="spring-boot" }
spring-boot-config-processer = { module="org.springframework.boot:spring-boot-configuration-processor", version.ref="spring-boot" }
spring-boot-devtools = { module="org.springframework.boot:spring-boot-devtools", version.ref="spring-boot" }
spring-boot-jdbc = { module="org.springframework.boot:spring-boot-starter-jdbc", version.ref="spring-boot" }
spring-boot-jpa = { module="org.springframework.boot:spring-boot-starter-data-jpa", version.ref="spring-boot" }
spring-boot-rest = { module="org.springframework.boot:spring-boot-starter-data-rest", version.ref="spring-boot" }
spring-boot-test = { module="org.springframework.boot:spring-boot-starter-test", version.ref="spring-boot" }
spring-boot-validation = { module="org.springframework.boot:spring-boot-starter-validation", version.ref="spring-boot" }
spring-boot-web = { module="org.springframework.boot:spring-boot-starter-web", version.ref="spring-boot" }
spring-security = { module="org.springframework.boot:spring-boot-starter-security", version.ref="spring-boot" }
spring-security-test = { module="org.springframework.security:spring-security-test", version.ref="spring-security" }
springfox = { module="io.springfox:springfox-core", version.ref="springfox" }
swagger-annotations = { module="io.swagger:swagger-annotations", version.ref="swagger-annotations" }
swagger-annotations-openapi = { module="io.swagger.core.v3:swagger-annotations", version.ref="swagger-annotations-openapi" }
modelmapper = {module="org.modelmapper:modelmapper", version.ref="modelmapper"}
commons-lang3 = {module="org.apache.commons:commons-lang3", version.ref="commons-lang3"}
testcontainers = { module="org.testcontainers:testcontainers", version.ref="testcontainers" }
testcontainers-postgres = { module="org.testcontainers:postgresql", version.ref="testcontainers" }
testcontainers-jupiter = { module="org.testcontainers:junit-jupiter", version.ref="testcontainers" }
datafaker = { module="net.datafaker:datafaker", version.ref="datafaker" }


[plugins]
bmuschko-docker = { id="com.bmuschko.docker-remote-api", version.ref="bmuschko-docker" }
grgit = { id = "org.ajoberstar.grgit", version.ref="grgit" }
jpa-schema-gen = { id="com.github.rmee.jpa-schema-gen", version.ref="jpa-schema-gen" }
node = { id="com.github.node-gradle.node", version.ref="node-gradle" }
openapi-generator = { id="org.openapi.generator", version.ref="openapi-generator" }
sonarqube = { id="org.sonarqube", version.ref="sonarqube" }
spring-boot = { id="org.springframework.boot", version.ref="spring-boot" }
unbrokendom-testsets = { id="org.unbroken-dome.test-sets", version.ref="unbrokendom" }
owasp-dependencycheck = { id="org.owasp.dependencycheck", version.ref="owasp-dependencycheck" }
